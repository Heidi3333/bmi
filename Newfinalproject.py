# -*- coding: utf-8 -*-
"""New Final project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kg2Ygt0qq--qK_O09BgLNLLPq9cNp_e8
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
import xgboost as xgb
from sklearn.metrics import accuracy_score, classification_report
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import xgboost as xgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix
from sklearn.preprocessing import StandardScaler

import streamlit as st
import pandas as pd
import joblib


# Load the trained XGBoost model
model = joblib.load('xgboost_model.joblib')

# Load the training dataset
train_data = pd.read_csv("diabetes_prediction_dataset.csv")

# Convert categorical variables to numerical representation
train_data = pd.get_dummies(train_data, columns=["gender", "smoking_history"])

# Split the training data into features and target variable
X_train = train_data.drop("diabetes", axis=1)
y_train = train_data["diabetes"]


# Define the Streamlit app
def main():
    # Set the app title
    st.title("Diabetes Prediction")
    
    # Create input fields for the features
    gender = st.selectbox("Gender", ["Female", "Male"])
    age = st.number_input("Age")
    hypertension = st.checkbox("Hypertension")
    heart_disease = st.checkbox("Heart Disease")
    smoking_history = st.selectbox("Smoking History", ["Never", "No Info", "Current", "Former", "Ever", "Not Current"])
    bmi = st.number_input("BMI")
    hba1c_level = st.number_input("HbA1c Level")
    blood_glucose_level = st.number_input("Blood Glucose Level")

    # Create a prediction button
    if st.button("Predict"):
        # Create a DataFrame with the input data
        data = {
            "gender": [gender],
            "age": [age],
            "hypertension": [int(hypertension)],
            "heart_disease": [int(heart_disease)],
            "smoking_history": [smoking_history],
            "bmi": [bmi],
            "hba1c_level": [hba1c_level],
            "blood_glucose_level": [blood_glucose_level]
        }
        df = pd.DataFrame(data)

        # Preprocess the input data
        df = pd.get_dummies(df, columns=["gender", "smoking_history"])
        df = df.reindex(columns=X_train.columns, fill_value=0)

        # Make predictions using the trained XGBoost model
        predictions = model.predict(df)

        # Display the predictions
        st.subheader("Prediction")
        if predictions[0] == 0:
            st.write("No diabetes")
        else:
            st.write("Diabetes")

# Run the Streamlit app
if __name__ == '__main__':
    main()